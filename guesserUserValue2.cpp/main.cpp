/*
 
 Leo Neto
 CSCI 24000
 Sept 9, 2016
 guessUserValue.cpp
 Black Belt Project
 
 *** Divide and Conquer
 *** No random number generator is to be used.
 *** Inclusive range of numbers is 1 to 100
 
 Approach for writing the computer guessing algorithm:
 *** Guess a number in the middle.
 *** Ask if guess is correct, too high, or too low.
 *** Guess a number in the middle.
 *** Ask if guess is correct, too high, or too low.
 *** Continue with the same approach...
 
 */

#include<iostream>
using namespace std;



int main(){
    bool keepProgram = true;
    
    // GAME 1
    srand(time(NULL));
    int CompGenerated = rand() % 100;
    int UserGuess;
    bool keepGame1 = true;
    int UserTries = 0;
    
    // GAME 2
    int max = 100; // Maximum value allowed
    int min = 1; // Ninimum value allowed
    int UserValue; // User's value input
    char UserFeedback; // User's response to computer generated guess
    int CompGuess; // Guess generated by the computer
    int CompTries = 0; // Number of tries
    bool keepGame2 = true; // A condition for the loop to either continue or break
    char GameOption;
    
    
    cout <<"Welcome to Guesser, the game where you can practice your guessing skills."<< endl;
    cout <<"In GAME 1 you can guess a number genereted by the computer."<< endl;
    cout <<"In GAME 2 you can have the computer guess your input."<< endl;
    cout <<"Please choose which version of the game you'd like to play."<< endl;
    //cout <<"Game commands:"<< endl;
    cout <<"*** Press A for GAME 1."<< endl;
    cout <<"*** Press B for GAME 2."<< endl;
    cout <<"*** Press Q to  QUIT."<< endl;
    cin >> GameOption;
    
    
    
            if(GameOption == 'a'){
                GameOption = 'A';
            }
            else if (GameOption == 'b'){
                GameOption = 'B';
            }
            else if (GameOption == 'q'){
                GameOption = 'Q';
                keepGame1 = false;
            }
    
    
    
    
    
    
    // THE PROGRAM STARTS HERE
    while(keepProgram){
        
        
        // GAME 1 consists of the user guessing the user input.
        if(GameOption == 'A' | GameOption == 'a'){
            
        cout << endl;
        cout <<"Welcome to GAME 1 - Show the computer who is the boss."<< endl;
            
                    while(keepGame1){
                        UserTries++;
                        cout <<"Please enter your guess: " << endl;
                        cin >> UserGuess;
                        
                        if (UserGuess < CompGenerated){
                            cout <<"Your guess is too low." << endl;
                        } else if (UserGuess > CompGenerated){
                            cout <<"Your guess is too high."<< endl;
                        } else {
                            cout << "Your guess is correct!" << endl;
                            keepGame1 = false;
                        } // end if
                    } // end while
                
                if(UserTries>1){
                cout <<"It took you "<< UserTries << " turns to guess." << endl;
                } else{
                 cout <<"It took you "<< UserTries << " attempt to guess." << endl;
                } // end if-else
            
                cout <<"What do you want to do next?"<< endl;
                cin >> GameOption;
            
                if(GameOption == 'q' | GameOption == 'Q'){
                    keepProgram = false;
                } else if(GameOption == 'a' | GameOption == 'A'){
                    keepGame1 = true;
                    keepProgram = true;
                    UserTries=0;
                } else if(GameOption == 'b' | GameOption == 'B'){
                    keepGame1 = true;
                    keepProgram = true;
                    UserTries = 0;
                } // end if-else
            
            
        } // end if
        
        
        // ********************************************************************** End of GAME 1
        
        
        
        
        
        
        
        
        
        
        // GAME 2 consists of the computer guessing the user input.
        else if(GameOption == 'B' | GameOption == 'b'){
            
                    cout << endl;
                    cout <<"Welcome to GAME 2 - Let the Robot guess your number."<< endl;
    
                    // Instructions for the user
                    cout <<"In this program you will input a number from 1 to 100." << endl;
                    cout <<"The computer will then try to guess which number you choose to input." << endl;
                    cout <<"The computer uses an algorithm to guess. It won't spy on your input. Promise!" << endl;
                    cout <<"Once the computer guesses your input, please answer with the following commands:" << endl;
                    cout <<"L for \"guess lower than input\"" << endl;
                    cout <<"H for \"guess higher than input\"" << endl;
                    cout <<"C for \"currect guess\"" << endl;
                    
                    
                    // User input is stored in UserValue
                    cout <<"Please enter a number for the computer to guess: "<< endl;
                    cin >> UserValue;
                    
                    
                    // Input control. User must only enter values from 1 to 100
                    while(UserValue > 100 | UserValue < 1){
                        cout << "Please only enter values from 1 to 100." << endl;
                        cout << "Please enter a number for the computer to guess: "<< endl;
                        cin >> UserValue;
                    }
                    
                    
                    // Computer generated guess starts here
                    CompGuess = max/2; // This will guess 50 at first.
                    cout <<"Is your value " << CompGuess <<"?" << endl;
                    cin >> UserFeedback; // Get feedback from user
                    
                    
                            while(keepGame2){
                                
                                // Convert feedback to UPPERCASE, just to tidy things up
                                if(UserFeedback == 'l'){
                                    UserFeedback = 'L';
                                } else if(UserFeedback == 'h'){
                                    UserFeedback = 'H';
                                } else if(UserFeedback == 'c'){
                                    UserFeedback = 'C';
                                } else{
                                    cout <<"Please enter a valid command."<< endl;
                                    cout <<"This program only accepts L, H, or C." << endl;
                                    cout <<"Is the guess (L)Lower, (H)Higher, or (C)Correct?"<< endl;
                                    cin >>UserFeedback;
                                } // end if
                                
                                
                                
                                // If guess is LOWER than UserValue
                                if(UserFeedback == 'L' | UserFeedback == 'l'){
                                    CompTries++; // Increment the number of times the computer has guessed
                                    min = CompGuess; // redefine MINIMUM value to be the previous guess
                                    CompGuess = min + (1+max-min)/2; // Compute a new guess
                                    cout <<"Is your value "<<CompGuess<<"?" <<endl;
                                    cin >> UserFeedback; // Get user feedback again
                                }
                                
                                
                                // If guess is HIGHER than UserValue
                                else if(UserFeedback == 'H' | UserFeedback == 'h'){
                                    CompTries++; // increment the number of times the computer has guessed
                                    max = CompGuess; // define CompGuess to be our new MAXIMUM
                                    
                                    
                                    // Take the difference between the maximum and minimum values and divide by two.
                                    CompGuess = (max + min)/2;
                                    cout <<"Is your value "<<CompGuess<<"?" <<endl;
                                    cin >> UserFeedback; // Get user feedback again
                                }
                                
                                
                                // If guess is CORRECT
                                else if(UserFeedback == 'C' | UserFeedback == 'c'){
                                    CompTries++; // Increment the number of times the computer has guessed
                                    CompGuess = CompGuess; // This is redundant, I know :)
                                    keepGame2 = false; // set loop condition to false
                                }
                                
                            }
            
                    
                    // Beacause grammar matters,
                    // the print statement should accomodate both singular and plural attempts.
                    if(CompTries==1){
                        cout <<"Your value was "<<CompGuess<<" and I guessed it in "<<CompTries<<" attempt."<< endl;
                    }else{
                        cout <<"Your value was "<<CompGuess<<" and I guessed it in "<<CompTries<<" attempts."<< endl;
                    }
            
                    // Should program restart?
                    cout <<"What do you want to do next?"<< endl;
                    cin >> GameOption;
            
                    // Processing user input
                    if(GameOption == 'q' | GameOption == 'Q'){ // If QUITTING
                        keepGame2 = false; // Set loop condition to false inside GAME 2
                        keepProgram = false; // Set loop condition to false within the MAIN PROGRAM
                    } else if(GameOption == 'a' | GameOption == 'A'){ // if going to play GAME 1
                        keepGame2 = false; // set loop condition for GAME 2 to false
                        keepProgram = true; // continue looping within the MAIN PROGRAM
                        CompTries=0; // reset number of guesses
                    } else if(GameOption == 'b' | GameOption == 'B'){
                        keepGame2 = false; // set loop condition for GAME 2 to false
                        keepProgram = true; // continue looping within the MAIN PROGRAM
                        CompTries = 0; // reset number of guesses
                    }
            
                    cout <<"\n"<< endl;
            
        }
        
       
        // ************************************************************ End of GAME 2
        
        
        
    
        
        
                // If from the outset the user chooses to QUIT, set loop condition to false
                else if(GameOption == 'Q' | GameOption == 'q'){
                    keepProgram = false;
                }
        
    
        
                // How to handle invalid inputs
                else{
                //while(GameOption != 'A' | GameOption != 'B' | GameOption != 'Q'){
                    cout << endl;
                    //cout <<"Please enter a valid option>"<< endl;
                    cout <<"For GAME 1, please enter A."<< endl;
                    cout <<"For GAME 2, please enter B."<< endl;
                    cout <<"To QUIT, please enter Q."<< endl;
                    cout <<"What do you want to do next?"<< endl;
                    cin >> GameOption;
                }
        
        }
    
    
    
    return 0;
}